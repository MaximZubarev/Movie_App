// Generated by Dagger (https://dagger.dev).
package com.mldz.core_network_impl.di;

import com.mldz.core_network_impl.retrofit.MovieApi;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import retrofit2.Retrofit;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class RetrofitModule_ProvideApiFactory implements Factory<MovieApi> {
  private final RetrofitModule module;

  private final Provider<Retrofit> retrofitProvider;

  public RetrofitModule_ProvideApiFactory(RetrofitModule module,
      Provider<Retrofit> retrofitProvider) {
    this.module = module;
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public MovieApi get() {
    return provideApi(module, retrofitProvider.get());
  }

  public static RetrofitModule_ProvideApiFactory create(RetrofitModule module,
      Provider<Retrofit> retrofitProvider) {
    return new RetrofitModule_ProvideApiFactory(module, retrofitProvider);
  }

  public static MovieApi provideApi(RetrofitModule instance, Retrofit retrofit) {
    return Preconditions.checkNotNullFromProvides(instance.provideApi(retrofit));
  }
}
