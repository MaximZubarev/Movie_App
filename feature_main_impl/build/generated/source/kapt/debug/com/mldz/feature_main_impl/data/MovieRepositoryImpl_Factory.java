// Generated by Dagger (https://dagger.dev).
package com.mldz.feature_main_impl.data;

import com.mldz.core_network_api.data.HttpClient;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("com.mldz.core_utils.di.general.PerFeature")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class MovieRepositoryImpl_Factory implements Factory<MovieRepositoryImpl> {
  private final Provider<HttpClient> httpClientProvider;

  public MovieRepositoryImpl_Factory(Provider<HttpClient> httpClientProvider) {
    this.httpClientProvider = httpClientProvider;
  }

  @Override
  public MovieRepositoryImpl get() {
    return newInstance(httpClientProvider.get());
  }

  public static MovieRepositoryImpl_Factory create(Provider<HttpClient> httpClientProvider) {
    return new MovieRepositoryImpl_Factory(httpClientProvider);
  }

  public static MovieRepositoryImpl newInstance(HttpClient httpClient) {
    return new MovieRepositoryImpl(httpClient);
  }
}
